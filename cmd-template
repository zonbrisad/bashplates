#!/bin/bash
#---------------------------------------------------------------------
#
#  A basic template for bash shellscripts with commands and help information, 
#  color coding etc.
#
#  Author: Peter Malmberg <peter.malmberg@gmail.com>
#
#---------------------------------------------------------------------
#

# User Settings
#---------------------------------------------------------------------

# logfile
logfile=/var/log/logfile.log



#--------------------------------------------------------------------- 
# User functions
#---------------------------------------------------------------------

funk1() { ## Description of funktion 1 
  echo "Funk 1"
}

funk2() { ## Description of function 2
  echo "Funk 2"
	chSetting "test.conf" "central.database" arne
}

clean() { ## Remove leftover files
  find . -name "*~" -delete
}

 
#--------------------------------------------------------------------- 
# System functions and settings
#---------------------------------------------------------------------

# Basedir for script
basedir=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )

# ANSI foreground colors codes
#
E_BLACK='\e[0;30m'        # Black
E_RED='\e[0;31m'          # Red
E_GREEN='\e[0;32m'        # Green
E_YELLOW='\e[0;33m'       # Yellow
E_BLUE='\e[0;34m'         # Blue
E_MAGENTA='\e[0;35m'      # Magenta
E_CYAN='\e[0;36m'         # Cyan
E_GRAY='\e[0;37m'         # Gray
E_DARKGRAY='\e[1;30m'     # Dark Gray
E_BOLD_RED='\e[1;31m'     # Bold Red
E_BOLD_GREEN='\e[1;32m'   # Bold Green
E_BOLD_YELLOW='\e[1;33m'  # Bold Yellow
E_BOLD_BLUE='\e[1;34m'    # Bold Blue
E_BOLD_MAGENTA='\e[1;35m' # Bold Magenta
E_BOLD_CYAN='\e[1;36m'    # Bold Cyan
E_BOLD_WHITE='\e[1;37m'   # White

# ANSI background color codes
#
On_Black='\e[40m'         # Black
On_Red='\e[41m'           # Red
On_Green='\e[42m'         # Green
On_Yellow='\e[43m'        # Yellow
On_Blue='\e[44m'          # Blue
On_Purple='\e[45m'        # Purple
On_Cyan='\e[46m'          # Cyan
On_White='\e[47m'         # White

# ANSI cursor operations
#
E_RETURN="\e[F"           # Move cursor to begining of line
E_UP="\e[A"               # Move cursor one line up
E_DOWN="\e[B"             # Move cursor one line down
E_FORWARD="\e[C"          # Move cursor forward
E_BACK="\e[D"             # Move cursor backward
E_HIDE="\e[?25l"          # Hide cursor 
E_SHOW="\e[?25h"          # Show cursor 

E_END="\e[m"              # Clear Attributes

printLine() {
  echo -e "${E_BOLD_WHITE}------------------------------------------------------------------------------${E_END}"
}


# Function logging to file
#
# Arg1 String to log to file
# 
fnLog() {
  ts=$(date +"%Y-%m-%d %H:%M:%S")
	echo $ts $1 >> $logfile
}

# Change setting in config file (key value pair)
#
# arg1 config file
# arg2 setting to change
# arg3 new value for setting
#
chSetting() { 
  SETTING=$2
	VAL=$3
	sed -i "s/^\(${SETTING}\s*=\s*\).*\$/\1$VAL/" $1
}

help() { ## Print this help information
  echo 
	printf "%-20s  %s\n" "Target" "Help"
	printLine
	IFS=$'\n'
  help_lines=`grep -h "##" $0 | grep -v grep | grep -v help_line`
	for help_line in ${help_lines[@]}; do                                     
    help_command=`echo $help_line | sed -s 's/(.*//'`
		help_info=`echo $help_line | sed -s 's/^.*##//'`
	  printf "${E_BOLD_CYAN}%-20s %s${E_END}" $help_command                  
	  printf "${E_BOLD_GREEN}%s${E_END}\n" $help_info
	done 
	printLine
	echo
}

# Runs a function in this file as a command
runCommand() { 
  funks=`grep "##" $0 | grep -v grep | grep -v help_line`
	for line in ${funks[@]}; do
	  command=`echo $line | sed -s 's/(.*//'`
		if [ "$command" == "$1" ]; then
		  $command $1 $2 $3 $4 $5 $6 $7 $8 $9 $10
			exit
		fi
	done
	help	
}

runCommand $1 $2 $3 $4 $5 $6 $7 $8 $9 $10
